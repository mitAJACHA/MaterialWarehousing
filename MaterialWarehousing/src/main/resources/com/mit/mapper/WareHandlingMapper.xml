<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
 <mapper namespace="com.mit.mapper.WareHandlingMapper">
 	<sql id="criteria">
    	<trim prefixOverrides="AND">
   			<trim prefix="AND">
   				<if test='companyName!=null'>
   					name like'%'||#{companyName}||'%'
   				</if>
   				<if test='partName!=null'>
   					AND partname like'%'||#{partName}||'%'
   				</if>
   				<if test='startDate!=null and endDate ==null'>
   					<![CDATA[ AND order_date => TO_TIMESTAMP(#{startDate}, 'YYYY-MM-DD')  ]]>
   				</if>
   				<if test='startDate==null and endDate !=null'>
   					<![CDATA[ AND order_date <= TO_TIMESTAMP(#{endDate}, 'YYYY-MM-DD') ]]>
   				</if>
   				<if test='startDate!=null and endDate !=null'>
   					AND order_date between TO_TIMESTAMP(#{startDate}, 'YYYY-MM-DD')-1 and TO_TIMESTAMP(#{endDate}, 'YYYY-MM-DD')+1 
   					<!-- 날짜 검색 기능 개선 (between은 양쪽 날짜가 포함되지 않아 -1, +1 함)-->
   				</if>
   				<if test='recentDate !=null and recentDate.equals("week")'>
   					<![CDATA[ AND order_date >= sysdate-7  ]]>
   					<!-- 최근 일주일  -->
   				</if>
   				<if test='recentDate !=null and recentDate.equals("month")'>
   					<![CDATA[ AND order_date >= sysdate-30 ]]>
   					<!-- 최근 한달  -->
   				</if>
   			</trim>
    	</trim>
    </sql>
 	
 	<sql id="List">
	 		<![CDATA[
	 		SELECT *
	 			FROM (select rownum rn, order_num, order_date, partname, companyname, real_quantity, order_quantity,
	 			 inspection_status, handleorreturn, ware_date
	 			FROM (WITH tbl_result AS
				(select tbl_sumq.order_num, (tbl_sumq.sum_q-tbl_sumi.sum_i) real_quantity
				from 
				    (select order_num, sum(inspection_quantity)sum_q from inspection group by order_num)tbl_sumq,
				    (select order_num, sum(inspection_defect)sum_i from inspection_result group by order_num)tbl_sumi
				where tbl_sumq.order_num = tbl_sumi.order_num)
				
				select DISTINCT
				    po.order_num order_num, 
				    po.order_date order_date, 
				    p.partname partname, 
				    company.name companyname,
				    company.comemail email, 
				    re.real_quantity real_quantity, 
				    po.order_quantity order_quantity, 
				        CASE 
				        WHEN ir.close = 1 THEN '검수완료'
				        ELSE '검수미완료'
				        END AS inspection_status,
				    CASE
				        WHEN real_quantity >= po.order_quantity
				        AND ir.close = 1 AND wh.ware_date IS NULL THEN '입고처리'
				        WHEN real_quantity < po.order_quantity
				        AND ir.close = 1 AND wh.ware_date IS NULL THEN '반품처리'
				        WHEN real_quantity >= po.order_quantity
				        AND ir.close = 1 AND wh.ware_date IS NOT NULL THEN '입고완료'
				        WHEN real_quantity < po.order_quantity
				        AND ir.close = 1 AND wh.ware_date IS NOT NULL THEN '반품완료'
				        ELSE '입고불가'
				    END AS handleorreturn,
				    wh.ware_date ware_date
				from purchase_order po INNER JOIN tbl_contract c ON po.contract_num = c.contractno
				        INNER JOIN tbl_part p ON p.partcode = c.partcode
				        INNER JOIN tbl_company company ON c.code = company.code
				        LEFT JOIN warehousing wh ON wh.order_num = po.order_num
				        RIGHT JOIN inspection i ON i.order_num = po.order_num
				        INNER JOIN inspection_result ir ON ir.order_num = i.order_num
				        RIGHT JOIN tbl_result re ON re.order_num = po.order_num
				 ]]>
			<where>
	    	<include refid="criteria"></include>
    	</where>
		<![CDATA[
 ORDER BY order_num DESC) WHERE ROWNUM <= (#{pageNum} * #{amount}))
		WHERE rn > ((#{pageNum}-1) * #{amount})
		]]>
 	</sql>
 	
 	<select id="getList"  resultType="com.mit.domain.WareHandlingVO">
 		<include refid="List"></include>
 	</select>
 	
 	
 	<insert id="handleok">
 		<![CDATA[INSERT INTO warehousing(ware_num, ware_date, ware_quantity, return, order_num) values(warehousing_num.nextval, sysdate, ${real_quantity}, 'N', ${order_num})]]>
	</insert>
 	
 	<insert id="handleno">
 		<![CDATA[INSERT INTO warehousing(ware_num, ware_date, ware_quantity, return, order_num) values(warehousing_num.nextval, sysdate, 0, 'Y', ${order_num})]]>
 	</insert>
 	
    <select id="count" resultType="long">
		select count(*) from(<include refid="List"></include>)
	</select>
 	

 </mapper>